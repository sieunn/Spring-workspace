<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
        
<!-- mapper 로 insert select update delete 감싸서 보낼 Mapper.java 경로설정 -->

<mapper namespace="com.khmall.mapper.SCMapper">
	<!-- 제품과 회사명 모두 보는 join select문 -->
	<select id="getAllSC" resultType="com.khmall.dto.SC">
		SELECT s.snack_id,s.snack_name, s.price, c.company_name,c.company_phone, c.company_address
		FROM snacks s, company c
		WHERE s.company_id = c.company_id
	
	</select>
	
	<!-- 제품 상세페이지에 보여줄 select문
		where문을 사용해서 특정 변수값을 가지고 올 때
		변수값이 String인지 int인지 float인지 등 어떤 타입인지를 지정하고 알려줘야함
		사용자한테 값을 전달받아 db에서 확인하거나 db에 저장할 때는 parameterType이라는 것을 사용함
		resultMap 사용하게 되면 parameterType을 사용하지 않아도 됨
		왜냐하면 DTO와 DB가 각각 어떤 타입을 가지고 변수명을 사용하는지 서로 매칭 시켜놓은 공간이 있기 때문
	 -->
	<select id="getSnackById" parameterType="int" resultType="com.khmall.dto.SC">
		select * from snacks
		where snack_id = #{snack_id} 
		<!-- 소비자가 원하는 제품상세페이지를 클릭하면 해당하는 제품의 아이디값을 가져와서 
			아이디값과 일치하는 데이터를 모두 가져오겠다.
		-->
	</select>
	<!-- 
	SELECT s.snack_id,s.snack_name, s.price, c.company_name,c.company_phone, c.company_address
		FROM snacks s, company c
		WHERE s.company_id = c.company_id
		AND nack_id = #{snack_id} 
		
		join 과 where을 통해 어떤 값을 찾을 때 and문을 사용할 수 있다
	 -->
	 
	<select id="getCompanyById" parameterType="int" resultType="com.khmall.dto.SC">
		select * from company
		where company_id = #{company_id} 
	</select>


</mapper>